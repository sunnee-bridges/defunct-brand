---
// src/pages/category/index.astro
import Base from "../../layouts/Base.astro";
import { slugify } from "../../lib/slug.js";

/**
 * Curated copy for category hubs (used for nicer labels & hover descriptions).
 * Keys MUST be slugified (same algo as `slugify()`).
 */
const CATEGORY_META: Record<string, { label?: string; desc?: string }> = {
  "retail": {
    desc:
      "Department stores, specialty shops, and mall icons that shuttered‚Äîtimelines, fates, and what led to the downfall.",
  },
  "software-internet": {
    label: "Software / Internet",
    desc:
      "Once-dominant apps and online services‚Äîwhat they did, when they peaked, and why they disappeared.",
  },
  "mobile-devices": {
    desc:
      "Phones, PDAs, and handhelds that defined eras of mobility‚Äîand the shifts that ended them.",
  },
  "retail-entertainment": {
    desc:
      "Movie, game, and media storefronts that couldn‚Äôt survive the digital turn.",
  },
  "computers": {
    desc:
      "PC makers and platforms that shaped personal computing before being outpaced by new ecosystems.",
  },
  "e-commerce": {
    desc:
      "Dot-com darlings and online storefronts‚Äîearly strategies vs. today‚Äôs e-commerce giants.",
  },
  "consumer-electronics": {
    label: "Consumer electronics",
    desc:
      "Gadgets we loved‚Äîfrom music players to cameras‚Äîretired by smartphones or shifting tastes.",
  },
  "video-games": {
    label: "Video games",
    desc:
      "Studios, services, and titles that disappeared‚Äîlaunches, closures, and influence.",
  },
  "video-game-consoles": {
    label: "Video game consoles",
    desc:
      "Hardware that battled for the living room‚Äîspecs, release windows, and market forces.",
  },
  "airline": {
    label: "Airlines",
    desc:
      "Carriers that merged, rebranded, or ceased operations‚Äîroutes, fleets, consolidation timelines.",
  },
  "wearables": {
    desc:
      "Watches, bands, and quantified-self experiments‚Äîwhat launched, what stuck, what faded.",
  },
};

/** Load curated brand JSON at build time */
const modules = import.meta.glob("/src/content/brands/*.json", {
  eager: true,
  import: "default",
}) as Record<string, any>;

/** Normalize + de-dupe by canonical slug (fallback to slugify(brand)) */
const bySlug = new Map<string, any>();
for (const raw of Object.values(modules)) {
  const b = raw as any;
  if (!b) continue;
  const key =
    String(b.slug || "").trim().toLowerCase() ||
    slugify(String(b.brand || ""));
  if (!key) continue;
  if (typeof b.category === "string") b.category = b.category.trim();
  if (!b.category) continue;
  if (!bySlug.has(key)) bySlug.set(key, b); // first-wins
}
const brands = Array.from(bySlug.values());

/** Build category counts (based on deduped curated set) */
const counts = new Map<string, number>();
for (const b of brands) {
  counts.set(b.category, (counts.get(b.category) || 0) + 1);
}

/**
 * Sorted categories with meta applied.
 * We keep the canonical slug for URLs, and use CATEGORY_META to override label/desc.
 */
const categories = Array.from(counts.entries())
  .map(([rawLabel, n]) => {
    const slug = slugify(rawLabel);
    const meta = CATEGORY_META[slug] ?? {};
    const displayLabel = meta.label || rawLabel;
    const desc = meta.desc || `Explore ${n} brand${n === 1 ? "" : "s"} in ${displayLabel}.`;
    return { slug, displayLabel, desc, n };
  })
  .sort((a, b) => a.displayLabel.localeCompare(b.displayLabel));

/** SEO bits */
const PAGE_TITLE = "Browse by Category ‚Ä¢ Defunct Brands";
const PAGE_DESC =
  "Browse discontinued and defunct brands by category. Clean, structured entries with timelines and outcomes.";
const CANONICAL = Astro.site ? new URL("/category/", Astro.site).href : "/category/";

/** Feature first 8 (for JSON-LD only) */
const FEATURED = categories.slice(0, 8);
---

<Base title={PAGE_TITLE} description={PAGE_DESC}>
  <!-- üîé SEO head -->
  <Fragment slot="head">
    <link rel="canonical" href={CANONICAL} />
    <meta name="description" content={PAGE_DESC} />

    <meta property="og:type" content="website" />
    <meta property="og:url" content={CANONICAL} />
    <meta property="og:title" content={PAGE_TITLE} />
    <meta property="og:description" content={PAGE_DESC} />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={PAGE_TITLE} />
    <meta name="twitter:description" content={PAGE_DESC} />

    {/* JSON-LD: ItemList of featured categories (optional but useful) */}
    {FEATURED.length > 0 && (
      <script type="application/ld+json">
        {JSON.stringify({
          "@context": "https://schema.org",
          "@type": "ItemList",
          name: "Categories",
          itemListElement: FEATURED.map((c, i) => ({
            "@type": "ListItem",
            position: i + 1,
            name: c.displayLabel,
            url: Astro.site
              ? new URL(`/category/${c.slug}/`, Astro.site).href
              : `/category/${c.slug}/`,
          })),
        })}
      </script>
    )}
  </Fragment>

  <!-- Page body (keeps your site-wide look & feel) -->
  <nav class="mb-4">
    <a href="/" class="chip focus-ring">‚Üê Home</a>
  </nav>

  <h1 class="text-2xl md:text-3xl font-bold mb-3">Browse by Category</h1>

  <ul class="grid grid-cols-[repeat(auto-fill,minmax(220px,1fr))] gap-2">
    {categories.map((c) => (
      <li>
        <a
          href={`/category/${c.slug}/`}
          class="chip focus-ring"
          title={c.desc}
          aria-label={`${c.displayLabel} (${c.n}). ${c.desc}`}
        >
          {c.displayLabel} <span class="text-gray-500">({c.n})</span>
        </a>
      </li>
    ))}
  </ul>
</Base>
