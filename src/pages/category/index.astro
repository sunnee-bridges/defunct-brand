---
// src/pages/category/index.astro
import Base from "../../layouts/Base.astro";
import { slugify } from "../../lib/slug.js";

/** Load curated brand JSON at build time (ONLY *.public.json) */
const modules = import.meta.glob("/src/content/brands/*.json", {
  eager: true,
  import: "default",
}) as Record<string, any>;

/** Normalize + de-dupe by canonical slug (fallback to slugify(brand)) */
const bySlug = new Map<string, any>();
for (const raw of Object.values(modules)) {
  const b = raw as any;
  if (!b) continue;
  const key =
    String(b.slug || "").trim().toLowerCase() ||
    slugify(String(b.brand || ""));
  if (!key) continue;
  if (typeof b.category === "string") b.category = b.category.trim();
  if (!b.category) continue;
  if (!bySlug.has(key)) bySlug.set(key, b); // first-wins
}
const brands = Array.from(bySlug.values());

/** Build category counts (based on deduped curated set) */
const counts = new Map<string, number>();
for (const b of brands) {
  counts.set(b.category, (counts.get(b.category) || 0) + 1);
}

/** Sorted categories */
const categories = Array.from(counts.entries()).sort((a, b) =>
  a[0].localeCompare(b[0])
);

/** SEO bits */
const PAGE_TITLE = "Browse by Category ‚Ä¢ Defunct Brands";
const PAGE_DESC =
  "Browse discontinued and defunct brands by category. Clean, structured entries with timelines and outcomes.";
const CANONICAL = Astro.site ? new URL("/category/", Astro.site).href : "/category/";
const FEATURED = categories.slice(0, 8).map(([label]) => label);
---

<Base title={PAGE_TITLE} description={PAGE_DESC}>
  <!-- üîé SEO head -->
  <Fragment slot="head">
    <link rel="canonical" href={CANONICAL} />
    <meta name="description" content={PAGE_DESC} />

    <meta property="og:type" content="website" />
    <meta property="og:url" content={CANONICAL} />
    <meta property="og:title" content={PAGE_TITLE} />
    <meta property="og:description" content={PAGE_DESC} />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={PAGE_TITLE} />
    <meta name="twitter:description" content={PAGE_DESC} />

    <!-- JSON-LD: ItemList of featured categories (optional but useful) -->
    {FEATURED.length > 0 && (
      <script type="application/ld+json">
        {JSON.stringify({
          "@context": "https://schema.org",
          "@type": "ItemList",
          name: "Categories",
          itemListElement: FEATURED.map((label, i) => ({
            "@type": "ListItem",
            position: i + 1,
            name: label,
            url: Astro.site
              ? new URL(`/category/${slugify(label)}/`, Astro.site).href
              : `/category/${slugify(label)}/`,
          })),
        })}
      </script>
    )}
  </Fragment>

  <!-- Page body (keeps your site-wide look & feel) -->
  <nav class="mb-4">
    <a href="/" class="chip focus-ring">‚Üê Home</a>
  </nav>

  <h1 class="text-2xl md:text-3xl font-bold mb-3">Browse by Category</h1>

  <ul class="grid grid-cols-[repeat(auto-fill,minmax(220px,1fr))] gap-2">
    {categories.map(([label, n]) => (
      <li>
        <a href={`/category/${slugify(label)}/`} class="chip focus-ring">
          {label} <span class="text-gray-500">({n})</span>
        </a>
      </li>
    ))}
  </ul>
</Base>
