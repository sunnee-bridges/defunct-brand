---
import Base from "../../layouts/Base.astro";

/** Build hands-free topic hubs from brand JSON */
export function getStaticPaths() {
  // Helpers kept INSIDE so they're always in scope at build time
  function slugifyTopic(name) {
    return String(name)
      .toLowerCase()
      .replace(/[^a-z0-9]+/g, "-")
      .replace(/^-+|-+$/g, "");
  }
  function titleFromSlug(s) {
    return String(s).replace(/-/g, " ").replace(/\b\w/g, (c) => c.toUpperCase());
  }

  const modules = import.meta.glob("/src/content/brands/*.json", {
    eager: true,
    import: "default",
  });

  const byTopic = Object.create(null);

  for (const mod of Object.values(modules)) {
    const b = mod || {};
    if (!Array.isArray(b.topics)) continue;
    for (const t of b.topics) {
      const key = slugifyTopic(t);
      if (!byTopic[key]) byTopic[key] = { display: titleFromSlug(key), brands: [] };
      byTopic[key].brands.push({
        brand: b.brand,
        slug: b.slug,
        category: b.category,
      });
    }
  }

  return Object.entries(byTopic).map(([topicSlug, data]) => ({
    params: { topic: topicSlug },
    props: { topicSlug, topicName: data.display, brands: data.brands },
  }));
}

/** Props from getStaticPaths */
const { topicSlug, topicName, brands } = Astro.props;

/** SEO */
const title = `${topicName} • Topic Hub`;
const desc =
  `Explore discontinued brands related to "${topicName}". Timelines, outcomes, and related categories.`;
const canonical = Astro.site
  ? new URL(`/topics/${encodeURIComponent(topicSlug)}/`, Astro.site).href
  : `/topics/${encodeURIComponent(topicSlug)}/`;

/** JSON-LD */
const jsonLd = [
  {
    "@context": "https://schema.org",
    "@type": "ItemList",
    name: title,
    numberOfItems: Array.isArray(brands) ? brands.length : 0,
    itemListElement: (Array.isArray(brands) ? brands : []).map((b, i) => ({
      "@type": "ListItem",
      position: i + 1,
      name: b.brand,
      url: Astro.site
        ? new URL(`/brand/${encodeURIComponent(b.slug)}/`, Astro.site).href
        : `/brand/${encodeURIComponent(b.slug)}/`,
    })),
  },
];
---

<Base title={title} description={desc} canonical={canonical} jsonLd={jsonLd}>
  <h1 class="text-2xl md:text-3xl font-bold mb-2">{title}</h1>

  {!brands?.length ? (
    <p class="text-slate-600 dark:text-slate-300">
      No brands found for this topic yet.
    </p>
  ) : (
    <ul class="list-disc pl-5">
      {brands
        .slice()
        .sort((a, b) => a.brand.localeCompare(b.brand))
        .map((b) => (
          <li>
            <a class="focus-ring hover:underline" href={`/brand/${encodeURIComponent(b.slug)}/`}>
              {b.brand}
            </a>
            {b.category && (
              <span class="text-slate-500 dark:text-slate-400"> · {b.category}</span>
            )}
          </li>
        ))}
    </ul>
  )}

  <nav class="mt-6 flex gap-3">
    <a href="/topics/" class="chip focus-ring">← All Topics</a>
    <a href="/az/" class="chip focus-ring">Browse A–Z</a>
  </nav>
</Base>
