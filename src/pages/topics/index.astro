---
import Base from "../../layouts/Base.astro";

type Brand = {
  brand: string;
  slug: string;
  topics?: string[];
};

function slugifyTopic(name: string) {
  return String(name)
    .toLowerCase()
    .replace(/[^a-z0-9]+/g, "-")
    .replace(/^-+|-+$/g, "");
}
function titleFromSlug(s: string) {
  return s.replace(/-/g, " ").replace(/\b\w/g, (c) => c.toUpperCase());
}

const title = "Browse Topics • Hubs";
const desc =
  "Explore topic hubs that group discontinued and defunct brands by shared themes.";
const canonical = Astro.site ? new URL("/topics/", Astro.site).href : "/topics/";

const modules = import.meta.glob("/src/content/brands/*.json", {
  eager: true,
  import: "default",
}) as Record<string, Brand>;

const counts: Record<string, number> = {};
for (const m of Object.values(modules)) {
  const b = m as Brand;
  if (!Array.isArray(b.topics)) continue;
  for (const t of b.topics) {
    const slug = slugifyTopic(t);
    counts[slug] = (counts[slug] || 0) + 1;
  }
}

const topics = Object.keys(counts)
  .sort()
  .map((slug) => ({ slug, name: titleFromSlug(slug), count: counts[slug] }));

const ld = [
  {
    "@context": "https://schema.org",
    "@type": "ItemList",
    name: "Topics",
    numberOfItems: topics.length,
    itemListElement: topics.map((t, i) => ({
      "@type": "ListItem",
      position: i + 1,
      name: t.name,
      url: Astro.site
        ? new URL(`/topics/${encodeURIComponent(t.slug)}/`, Astro.site).href
        : `/topics/${encodeURIComponent(t.slug)}/`,
    })),
  },
];
---

<Base title={title} description={desc} canonical={canonical} jsonLd={ld}>
  <h1 class="text-2xl md:text-3xl font-bold mb-4">{title}</h1>

  {topics.length === 0 ? (
    <p class="text-slate-600 dark:text-slate-300">No topics yet. Add <code>topics</code> arrays to your brand JSON files.</p>
  ) : (
    <ul class="grid gap-2 sm:grid-cols-2 md:grid-cols-3">
      {topics.map((t) => (
        <li class="flex items-center justify-between rounded-lg border border-slate-200 dark:border-slate-700 p-3">
          <a class="focus-ring hover:underline" href={`/topics/${encodeURIComponent(t.slug)}/`}>
            {t.name}
          </a>
          <span class="text-sm text-slate-500 dark:text-slate-400">{t.count}</span>
        </li>
      ))}
    </ul>
  )}

  <nav class="mt-6">
    <a href="/az/" class="chip focus-ring">Browse A–Z</a>
  </nav>
</Base>
