---
// src/pages/buy.astro

const CLIENT_ID =
  import.meta.env.PUBLIC_PAYPAL_CLIENT_ID || import.meta.env.PAYPAL_CLIENT_ID || "";
const ENV = (import.meta.env.PUBLIC_PAYPAL_ENV || "sandbox").toLowerCase();
const title = "Buy the Full CSV";
const price = "9.00"; // USD
const PAYPAL_HOST = ENV === "live" ? "www.paypal.com" : "www.sandbox.paypal.com";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{title}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    {CLIENT_ID && (
      <script
        src={`https://www.paypal.com/sdk/js?client-id=${CLIENT_ID}&currency=USD&intent=capture&components=buttons&disable-funding=paylater,card,credit`}
        defer
      />
    )}

    <style>
      :root{--fg:#111827;--muted:#6b7280;}
      @media (prefers-color-scheme: dark){:root{--fg:#e5e7eb;--muted:#9ca3af;}}
      body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,'Helvetica Neue',Arial,sans-serif;margin:0;padding:2rem;color:var(--fg);}
      .wrap{max-width:720px;margin:0 auto;}
      .muted{color:var(--muted);}
      .link{color:#2563eb;text-decoration:underline;}
      #result{margin-top:1rem}
      .note{font-size:.875rem;margin-top:.5rem}
      .pp-box{margin-top:.75rem}
      .fallback{margin-top:.5rem}
      .btn-fallback{display:inline-block;padding:.5rem .75rem;border-radius:.5rem;border:1px solid #d1d5db;background:#fff;text-decoration:none}
      .btn-fallback:hover{background:#f3f4f6}
    </style>
  </head>
  <body>
    <div class="wrap">
      <h1>{title}</h1>
      <p>Get instant access to the full dataset (CSV). Price: <strong>${price} USD</strong>.</p>

      {!CLIENT_ID ? (
        <p style="color:#b91c1c">
          Missing PayPal client ID. Set <code>PUBLIC_PAYPAL_CLIENT_ID</code> (and <code>PUBLIC_PAYPAL_ENV</code>) in your env and redeploy.
        </p>
      ) : (
        <div class="pp-box">
          <div id="paypal-loading" aria-live="polite">Loading…</div>
          <div id="paypal-btns"></div>
          <div id="result" class="note muted"></div>

          <div class="fallback">
            <a href="#" id="direct-checkout" class="btn-fallback">Having trouble? Try direct PayPal checkout</a>
          </div>

          <p class="note muted">ENV: {ENV} • CLIENT_ID: {CLIENT_ID.slice(0,10)}…</p>
          <p class="note muted">Payments are processed securely by PayPal. You’ll receive a one-time download link immediately after purchase.</p>
        </div>
      )}
    </div>

    {CLIENT_ID && (
      <script is:inline>
        (function(){
          var PAYPAL_HOST = {JSON.stringify(PAYPAL_HOST)};

          function $(id){ return document.getElementById(id); }
          function hideLoading(text){
            var el = $("paypal-loading");
            if (!el) return;
            if (typeof text === "string") el.textContent = text;
            el.style.display = "none";
          }
          function setResult(text){
            var el = $("result");
            if (!el) return;
            el.textContent = text || "";
          }
          function httpJSON(url, opts){
            return fetch(url, opts || {}).then(function(r){
              return r.json().then(function(data){ return { ok: r.ok, status: r.status, data: data }; })
                .catch(function(){ return { ok: r.ok, status: r.status, data: null }; });
            });
          }

          function directCheckout(ev){
            if (ev && ev.preventDefault) ev.preventDefault();
            setResult("Opening PayPal…");
            httpJSON("/.netlify/functions/paypal-create-order").then(function(res){
              if (!res.ok || !res.data || !res.data.id) {
                setResult("Create order failed (HTTP " + res.status + "). Please refresh and try again.");
                return;
              }
              var token = res.data.id;
              window.location.href = "https://" + PAYPAL_HOST + "/checkoutnow?token=" + encodeURIComponent(token);
            });
          }

          window.addEventListener("load", function(){
            var btn = $("direct-checkout");
            if (btn) btn.addEventListener("click", directCheckout);

            var fallbackTimer = setTimeout(function(){ hideLoading(); }, 8000);

            function renderButtons(){
              if (!window.paypal || !window.paypal.Buttons) return false;

              window.paypal.Buttons({
                style: { layout: "vertical", shape: "rect", color: "gold", label: "paypal" },
                fundingSource: window.paypal.FUNDING.PAYPAL,

                onInit: function(){ hideLoading(); setResult(""); },

                createOrder: function(){
                  return httpJSON("/.netlify/functions/paypal-create-order").then(function(res){
                    if (!res.ok || !res.data || !res.data.id) {
                      setResult("Create order failed (HTTP " + res.status + "). You can also try the direct checkout link below.");
                      throw new Error("createOrder failed");
                    }
                    return res.data.id;
                  });
                },

                onApprove: function(data){
                  setResult("Finalizing payment…");
                  return httpJSON("/.netlify/functions/paypal-capture-order", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ orderID: data && data.orderID })
                  }).then(function(cap){
                    if (!cap.ok || !cap.data || !cap.data.ok || !cap.data.token) {
                      hideLoading();
                      var msg = (cap.data && cap.data.error) ? cap.data.error : ("Capture failed (HTTP " + cap.status + ").");
                      setResult(msg + " You can also try the direct checkout link below.");
                      return;
                    }
                    return httpJSON("/.netlify/functions/download-link", {
                      method: "POST",
                      headers: { "Content-Type": "application/json" },
                      body: JSON.stringify({ token: cap.data.token })
                    }).then(function(dl){
                      hideLoading();
                      if (!dl.ok || !dl.data || !dl.data.url) {
                        var msg2 = (dl.data && dl.data.error) ? dl.data.error : ("Download link error (HTTP " + dl.status + ").");
                        setResult(msg2);
                        return;
                      }
                      var a = document.createElement("a");
                      a.href = dl.data.url;
                      a.textContent = "Click to download your CSV";
                      a.className = "link";
                      a.rel = "noopener";
                      var result = $("result");
                      if (result) { result.innerHTML = ""; result.appendChild(a); }
                    });
                  });
                },

                onError: function(err){
                  hideLoading();
                  var msg = err && err.message ? err.message : String(err);
                  setResult("PayPal error: " + msg + ". You can also try the direct checkout link below.");
                }
              }).render("#paypal-btns").then(function(){
                clearTimeout(fallbackTimer); hideLoading();
              }).catch(function(){
                clearTimeout(fallbackTimer); hideLoading();
              });

              return true;
            }

            // Try now; if SDK not ready yet, poll briefly (2s total)
            if (!renderButtons()){
              var tries = 0;
              var iv = setInterval(function(){
                tries += 1;
                if (renderButtons() || tries > 20) { clearInterval(iv); }
              }, 100);
            }
          });
        })();
      </script>
    )}
  </body>
</html>
