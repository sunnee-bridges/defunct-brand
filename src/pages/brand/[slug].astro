---
/**
 * Static generation for /brand/[slug]
 * Use import.meta.glob for both path generation and data loading.
 */

import Base from "../../layouts/Base.astro";
import ExploreMore from "../../components/ExploreMore.astro";
import AffiliateDisclosure from "../../components/AffiliateDisclosure.astro";

/** Generate paths for each brand file */
export function getStaticPaths() {
  // Define the glob INSIDE this function to avoid scope issues
  const modules = import.meta.glob("/src/content/brands_src/*.json");
  return Object.keys(modules).map((p) => {
    const slug = p.split("/").pop().replace(/\.json$/i, "");
    return { params: { slug } };
  });
}

/** Eagerly load all brand JSON for lookup at render time */
const brandModules = import.meta.glob("/src/content/brands_src/*.json", {
  eager: true,
  import: "default",
});

/** Resolve the current brand from the preloaded map */
const { slug } = Astro.params;
const modKey = `/src/content/brands_src/${slug}.json`;
const brand = brandModules[modKey] ?? null;
const notFound = !brand;

/* --- SEO / Canonical --- */
let pageTitle = "Page not found";
let pageDesc  = "Try another page or browse the full list.";
let canonical = Astro.site ? new URL("/az", Astro.site).href : "/az";

let brandLd = null;
let breadcrumbsLd = null;

if (!notFound) {
  const activeStr = `${brand.active?.start ?? "?"}\u2013${brand.active?.end ?? "?"}`;
  pageTitle = `What Happened to ${brand.brand}? (Timeline & Fate)`;
  pageDesc  = `${brand.brand}: ${brand.fate || "Defunct"}; active ${activeStr}. ${brand.summary ?? ""}`;

  const brandPath = `/brand/${encodeURIComponent(brand.slug || slug)}`;
  canonical = Astro.site ? new URL(brandPath, Astro.site).href : brandPath;

  // JSON-LD (computed keys avoid parser quirks)
  brandLd = {
    ['@context']: 'https://schema.org',
    ['@type']: 'Brand',
    name: brand.brand,
    description: brand.summary || undefined,
    foundingDate: brand.active?.start || undefined,
    dissolutionDate: brand.active?.end || undefined,
    category: brand.category || undefined,
  };

  breadcrumbsLd = {
    ['@context']: 'https://schema.org',
    ['@type']: 'BreadcrumbList',
    itemListElement: [
      { ['@type']: 'ListItem', position: 1, name: 'Home', item: Astro.site ? new URL('/', Astro.site).href : '/' },
      { ['@type']: 'ListItem', position: 2, name: 'A–Z',  item: Astro.site ? new URL('/az', Astro.site).href : '/az' },
      { ['@type']: 'ListItem', position: 3, name: brand.brand, item: canonical },
    ],
  };
}
---

<Base title={pageTitle} description={pageDesc}>
  <Fragment slot="head">
    <link rel="canonical" href={canonical} />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDesc} />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={pageDesc} />
    <meta name="twitter:card" content="summary" />
    {!notFound && brandLd && <script type="application/ld+json">{JSON.stringify(brandLd)}</script>}
    {!notFound && breadcrumbsLd && <script type="application/ld+json">{JSON.stringify(breadcrumbsLd)}</script>}
    {notFound && <meta name="robots" content="noindex,follow" />}
  </Fragment>

  {notFound ? (
    <>
      <nav class="flex flex-wrap items-center gap-2 my-3">
        <a href="/" class="chip focus-ring">← Home</a>
        <a href="/az" class="chip focus-ring">Browse A–Z</a>
      </nav>
      <h1 class="text-2xl md:text-3xl font-bold mb-2">Page not found</h1>
      <p class="text-slate-600 dark:text-slate-300">Try another page or browse the full list.</p>
    </>
  ) : (
    <>
      <nav class="flex flex-wrap items-center gap-2 my-3">
        <a href="/" class="chip focus-ring">← Home</a>
        <a href="/az" class="chip focus-ring">Browse A–Z</a>
      </nav>

      <h1 id="brand-title" class="text-2xl md:text-3xl font-bold mb-2">
        What Happened to {brand.brand}?
      </h1>

      <p class="text-gray-800 dark:text-slate-200">
        <strong>At a glance:</strong>
        {brand.active?.start ? ` Founded: ${brand.active.start}.` : "" }
        {brand.active?.end ? ` Defunct: ${brand.active.end}.` : "" }
        {brand.fate ? ` Fate: ${brand.fate}.` : "" }
        {brand.category ? ` Category: ${brand.category}.` : "" }
        {brand.country ? ` Country: ${brand.country}.` : "" }
      </p>

      {brand.summary && <p class="mt-3 text-gray-700 dark:text-slate-300">{brand.summary}</p>}

      <ExploreMore brand={brand} />
      <AffiliateDisclosure />
    </>
  )}
</Base>
