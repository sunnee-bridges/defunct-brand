---
// src/pages/index.astro
import Base from "../layouts/Base.astro";
import { slugify } from "../lib/slug.js";

/* ---------- Load curated brand JSON (curated *.json) ---------- */
const modules = import.meta.glob("/src/content/brands/*.json", {
  eager: true,
  import: "default",
}) as Record<string, any>;

/* ---------- Normalize + de-dupe by slug (fallback: slugify(brand)) ---------- */
const bySlug = new Map<string, any>();
for (const raw of Object.values(modules)) {
  const b = raw as any;
  if (!b) continue;

  const key =
    String(b.slug || "").trim().toLowerCase() ||
    slugify(String(b.brand || ""));

  if (!key) continue;
  if (!b.category) continue; // skip items without a category for browse UX

  if (!bySlug.has(key)) bySlug.set(key, b);
}
const brands: any[] = Array.from(bySlug.values());

/* ---------- Helpers ---------- */
const toYear = (v: unknown): number | undefined => {
  if (v == null) return undefined;
  const m = String(v).match(/\d{3,4}/);
  if (!m) return undefined;
  const n = parseInt(m[0], 10);
  return Number.isFinite(n) ? n : undefined;
};
const decadeStart = (y: number) => Math.floor(y / 10) * 10;

/* ---------- Categories (unique, alpha) ---------- */
const categories = Array.from(
  new Set(brands.map((b) => String(b.category).trim()))
).sort((a, b) => a.localeCompare(b));

/* ---------- AVAILABLE decades only (prefer end year, fallback to start) ---------- */
const decadeSet = new Set<number>();
for (const b of brands) {
  const y = toYear(b?.active?.end) ?? toYear(b?.active?.start);
  if (y !== undefined) decadeSet.add(decadeStart(y));
}
const availableDecadeLabels: string[] = [...decadeSet]
  .sort((a, b) => a - b)
  .map((d) => `${d}s`);
const totalDecades = availableDecadeLabels.length;

/* ---------- Featured: most recently ended first (fallback to start) ---------- */
const featured = brands
  .slice()
  .sort((a, b) => {
    const ay = toYear(a?.active?.end) ?? toYear(a?.active?.start) ?? 0;
    const by = toYear(b?.active?.end) ?? toYear(b?.active?.start) ?? 0;
    return by - ay;
  })
  .slice(0, 8); // trimmed from 12 → 8

/* ---------- SEO ---------- */
const pageTitle = "Vanished Brands — Defunct & Discontinued Brands Archive";
const pageDesc =
  "An easy way to explore discontinued and defunct brands with quick timelines, categories, decades, and a downloadable CSV dataset for research and journalism.";
const canonical = (Astro.site ? new URL("/", Astro.site).href : "/");

/* Organization (E-E-A-T: identity) */
const orgLd = {
  "@context": "https://schema.org",
  "@type": "Organization",
  name: "Vanished Brands",
  url: "https://vanishedbrands.com/",
  logo: "https://vanishedbrands.com/apple-touch-icon.png",
};

/* WebSite + SearchAction (helps site-wide discovery) */
const siteLd = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  name: "Vanished Brands",
  url: "https://vanishedbrands.com/",
  potentialAction: {
    "@type": "SearchAction",
    target: "https://vanishedbrands.com/az/?q={search_term_string}",
    "query-input": "required name=search_term_string"
  }
};

/* ItemLists for category/decade previews */
const categoriesItemListLd = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  name: "Browse by Category",
  itemListOrder: "http://schema.org/ItemListOrderAscending",
  numberOfItems: categories.length,
  itemListElement: categories.map((label: string, i: number) => ({
    "@type": "ListItem",
    position: i + 1,
    name: label,
    url: Astro.site
      ? new URL(`/category/${slugify(label)}/`, Astro.site).href
      : `/category/${slugify(label)}/`,
  })),
};

const decadesItemListLd = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  name: "Browse by Decade",
  itemListOrder: "http://schema.org/ItemListOrderAscending",
  numberOfItems: availableDecadeLabels.length,
  itemListElement: availableDecadeLabels.map((label: string, i: number) => ({
    "@type": "ListItem",
    position: i + 1,
    name: label,
    url: Astro.site
      ? new URL(`/decade/${label}/`, Astro.site).href
      : `/decade/${label}/`,
  })),
};

/* Small FAQPage JSON-LD (no UI) */
const faqLd = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  mainEntity: [
    {
      "@type": "Question",
      name: "What is Vanished Brands?",
      acceptedAnswer: {
        "@type": "Answer",
        text:
          "An archive of discontinued and defunct brands with timelines, categories, and a purchasable CSV dataset for research.",
      },
    },
    {
      "@type": "Question",
      name: "Can I download the dataset?",
      acceptedAnswer: {
        "@type": "Answer",
        text:
          "Yes. A free sample CSV is available, and the full dataset can be purchased securely via PayPal.",
      },
    },
  ],
};

const currentPath = Astro.url.pathname;
---

<Base
  title={pageTitle}
  description={pageDesc}
  canonical={canonical}
  jsonLd={[orgLd, siteLd, categoriesItemListLd, decadesItemListLd, faqLd]}
>
  <!-- ✅ Collapsible “Why this matters” to reduce clutter above the fold -->
  <section class="mt-4 mb-6" aria-label="Why this matters">
    <h1 class="text-2xl md:text-3xl font-bold mb-3">Why Brands Disappear (and Why It Matters)</h1>

    <!-- Visible, tight lead -->
    <p class="text-slate-800 dark:text-slate-200">
      Every year, familiar names vanish. Vanished Brands tracks those stories with quick timelines,
      clear categories, and reliable sources so you can see what ended—and why.
    </p>

    <!-- Expandable details keep the hero uncluttered -->
    <details class="mt-2">
      <summary class="cursor-pointer text-sm text-indigo-600 hover:underline">Read more</summary>
      <div class="prose dark:prose-invert max-w-none mt-2">
        <p>
          Why catalog defunct brands? Because they’re a fast, human way to understand bigger shifts in
          technology, retail, and culture. When smartphones absorbed MP3 players, when e-commerce reshaped
          malls, when streaming remade media—brands were the first visible signals of change. Following what
          launched, grew, and eventually ended helps journalists, students, and curious readers connect economic
          headlines to real products and everyday life.
        </p>
        <p>
          This site is built to be <em>useful</em> and <em>verifiable</em>. Each brand page summarizes the basics
          (founded, defunct, fate), links to authoritative sources (official announcements, Wikipedia, archives),
          and points you to related reading on our site. You can browse by <a class="underline" href="/az/">A–Z</a>,
          explore <a class="underline" href="/category/">categories</a> like Retail or Consumer electronics, or jump
          through time with <a class="underline" href="/decade/">decade views</a>. If you’re analyzing trends,
          head to <a class="underline" href="/data/">Data</a> for a CSV you can sort, chart, and cite.
        </p>
        <p>
          We keep things plain-language and ad-light, with transparent methods and a clear editorial policy.
          If a date is disputed, we say so. If sources disagree, we link both. The goal isn’t nostalgia for
          its own sake—it’s giving you a clean starting point to understand what happened, why it happened,
          and what that tells us about the present. Start anywhere: pick a decade, skim a category, or open a brand you remember.
        </p>
      </div>
    </details>

    <!-- Subtle internal links (engagement + crawl hints) -->
    <div class="mt-4 flex flex-wrap gap-2">
      <a href="/az/" class="chip focus-ring">Browse A–Z</a>
      <a href="/category/" class="chip focus-ring">Categories</a>
      <a href="/decade/" class="chip focus-ring">Decades</a>
      <a href="/topics/" class="chip focus-ring">Topics</a>
      <a href="/data/" class="chip focus-ring">Data (CSV)</a>
      <a href="/random/" class="chip focus-ring">Random</a>
    </div>
  </section>

  <!-- (kept) Invisible intro for SR/SEO context -->
  <p class="sr-only">
    Explore defunct and discontinued brands by category, decade, and A–Z index.
    Each brand page summarizes the timeline, fate, and key facts. A downloadable CSV dataset
    is available for analysts, researchers, and journalists.
  </p>

  <!-- Categories (unchanged UI/behavior) -->
  <section class="mt-6" role="region" aria-label="Browse by category">
    <h2 class="text-lg font-semibold mb-2">Browse by Category</h2>
    <nav class="flex flex-wrap gap-2" role="navigation" aria-label="Categories">
      {categories.map((c) => {
        const href = `/category/${slugify(c)}/`;
        const isCurrent = currentPath.startsWith(href);
        return (
          <a
            href={href}
            class="chip focus-ring aria-[current=page]:ring-2 aria-[current=page]:ring-indigo-500"
            aria-current={isCurrent ? "page" : undefined}
            title={`Defunct brands in ${c}`}
          >
            {c}
          </a>
        );
      })}
    </nav>
  </section>

  <!-- Decades (unchanged) -->
  <section class="mt-6" role="region" aria-label="Browse by decade">
    <h2 class="text-lg font-semibold mb-2">Browse by Decade</h2>
    <p class="text-gray-600 dark:text-slate-300 text-sm mb-1">
      Explore brands by the decade they ended (or started when unknown).
    </p>

    <nav class="flex flex-wrap gap-2 items-center" role="navigation" aria-label="Decades">
      {availableDecadeLabels.slice(0, 6).map((label) => {
        const href = `/decade/${label}/`;
        const isCurrent = currentPath === href;
        return (
          <a
            href={href}
            class="chip focus-ring aria-[current=page]:ring-2 aria-[current=page]:ring-indigo-500"
            aria-current={isCurrent ? "page" : undefined}
            title={`Defunct brands from the ${label}`}
          >
            {label}
          </a>
        );
      })}

      <a
        href="/decade/"
        class="btn-primary focus-ring"
        aria-label={`View all decades${totalDecades ? ` (${totalDecades} available)` : ""}`}
        title="View all decades"
      >
        View all &raquo;
      </a>
    </nav>
  </section>

  <!-- Featured grid (trimmed to 8; same card UI/behavior) -->
  <section class="mt-6 lg:mt-8" role="region" aria-label="Recently defunct brands">
    <h2 class="text-lg font-semibold mb-2">Recently Defunct (featured)</h2>

    <div class="grid grid-cols-[repeat(auto-fill,minmax(260px,1fr))] gap-5">
      {featured.map((b) => {
        const defunct = (b?.active?.end ?? "") || "?";
        const founded = b?.active?.start ?? "";
        const timeline = founded ? `${founded}\u2013${defunct}` : defunct !== "?" ? `\u2013${defunct}` : "";
        const oneLiner = (b?.summary || "").trim();

        return (
          <article class="card group" data-brand-slug={b.slug}>
            {/* Title */}
            <h3 class="text-lg font-semibold leading-snug line-clamp-2 mb-1 text-slate-900/95 dark:text-slate-100">
              <a
                href={`/brand/${b.slug}/`}
                class="hover:underline focus-ring stretched-link"
                title={`What happened to ${b.brand}?`}
              >
                {b.brand}
              </a>
            </h3>

            {/* Meta row: defunct year + industry */}
            <div class="mt-1 flex flex-wrap items-center gap-2 text-[12px]">
              {/* Defunct year chip */}
              <span
                class="inline-flex items-center rounded-full border border-slate-200 bg-white px-2 py-0.5 font-medium text-slate-700
                      dark:border-slate-700 dark:bg-slate-900 dark:text-slate-200"
                aria-label={defunct !== "?" ? `Year defunct: ${defunct}` : "Year defunct unknown"}
                title={defunct !== "?" ? `Year defunct: ${defunct}` : "Year defunct unknown"}
              >
                ⛔ {defunct !== "?" ? defunct : "Year unknown"}
              </span>

              {/* Industry chip */}
              {b.category && (
                <span
                  class="inline-flex items-center rounded-full bg-slate-100 px-2 py-0.5 font-medium text-slate-700
                        dark:bg-slate-800 dark:text-slate-300"
                  aria-label={`Industry: ${b.category}`}
                  title={`Industry: ${b.category}`}
                >
                  🏷️ {b.category}
                </span>
              )}

              {/* (Optional) Popularity chip — will be un-hidden by client JS if used */}
              <span
                class="inline-flex items-center rounded-full bg-amber-50 px-2 py-0.5 font-medium text-amber-700
                      dark:bg-amber-900/30 dark:text-amber-300"
                data-views
                hidden
              >
                ★ <span class="ml-1" data-views-count>0</span>
              </span>
            </div>

            {/* One-liner summary */}
            {oneLiner && (
              <p class="mt-2 text-sm text-gray-600 dark:text-slate-300 line-clamp-2">
                {oneLiner}
              </p>
            )}

            {/* Tiny timeline line */}
            <div class="mt-2 text-xs text-gray-500 dark:text-slate-400">
              {timeline}{b.fate ? ` \u2014 ${b.fate}` : ""}
            </div>
          </article>
        );
      })}
    </div>
  </section>
</Base>
