---
// src/pages/articles/defunct-by-decade/[decade].astro
import Base from "../../../layouts/Base.astro";

/* ---------- getStaticPaths: helpers live INSIDE to avoid hoist issues ---------- */
export function getStaticPaths() {
  function toYear(v) {
    if (v == null) return undefined;
    const m = String(v).match(/\d{3,4}/);
    if (!m) return undefined;
    const n = parseInt(m[0], 10);
    return Number.isFinite(n) ? n : undefined;
  }
  const decadeStart = (y) => Math.floor(y / 10) * 10;
  const labelForDecade = (y) => `${decadeStart(y)}s`;

  const brandModules = import.meta.glob("/src/content/brands/*.json", {
    eager: true,
    import: "default",
  });

  const labels = new Set();
  for (const mod of Object.values(brandModules)) {
    const endY = toYear(mod?.active?.end);
    const startY = toYear(mod?.active?.start);
    const y = endY ?? startY;
    if (y !== undefined) labels.add(labelForDecade(y));
  }

  return [...labels]
    .sort((a, b) => a.localeCompare(b))
    .map((decade) => ({ params: { decade } }));
}

/* ---------- Runtime: define helpers AGAIN (separate scope) ---------- */
function toYear(v) {
  if (v == null) return undefined;
  const m = String(v).match(/\d{3,4}/);
  if (!m) return undefined;
  const n = parseInt(m[0], 10);
  return Number.isFinite(n) ? n : undefined;
}
const decadeStart = (y) => Math.floor(y / 10) * 10;
const labelForDecade = (y) => `${decadeStart(y)}s`;

const modules = import.meta.glob("/src/content/brands/*.json", {
  eager: true,
  import: "default",
});

const { decade } = Astro.params;              // e.g. "1990s"
const requested = String(decade).toLowerCase();

const items = Object.values(modules)
  .map((b) => {
    const endY = toYear(b?.active?.end);
    const startY = toYear(b?.active?.start);
    const y = endY ?? startY;
    const label = y !== undefined ? labelForDecade(y) : null;
    return {
      brand: b?.brand,
      slug: b?.slug,
      category: b?.category ?? null,
      fate: b?.fate ?? "",
      active: b?.active ?? {},
      decadeLabel: label,
    };
  })
  .filter((x) => x.brand && x.slug && x.decadeLabel?.toLowerCase() === requested)
  .sort((a, b) => a.brand.localeCompare(b.brand));

/* ---------- SEO / JSON-LD ---------- */
const hubPath = `/articles/defunct-by-decade/${encodeURIComponent(requested)}/`;
const title = `Defunct Brands in the ${requested}`;
const desc = `Explore ${items.length} discontinued or defunct brands whose key events fall in the ${requested}.`;
const canonical = Astro.site ? new URL(hubPath, Astro.site).href : hubPath;

const ldItems = items.map((b, i) => ({
  "@type": "ListItem",
  position: i + 1,
  name: b.brand,
  url: Astro.site
    ? new URL(`/brand/${encodeURIComponent(b.slug)}/`, Astro.site).href
    : `/brand/${encodeURIComponent(b.slug)}/`,
}));
const itemListLd = {
  "@context": "https://schema.org",
  "@type": "ItemList",
  name: title,
  itemListOrder: "http://schema.org/ItemListOrderAscending",
  numberOfItems: items.length,
  itemListElement: ldItems,
};
const collectionPageLd = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  url: canonical,
  name: title,
  description: desc,
  mainEntity: itemListLd,
};
const breadcrumbsLd = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    { "@type": "ListItem", position: 1, name: "Home", item: Astro.site ? new URL("/", Astro.site).href : "/" },
    { "@type": "ListItem", position: 2, name: "Decades", item: Astro.site ? new URL("/decade/", Astro.site).href : "/decade/" },
    { "@type": "ListItem", position: 3, name: requested, item: canonical },
  ],
};
---

<Base title={title} description={desc} canonical={canonical} jsonLd={[collectionPageLd, breadcrumbsLd, itemListLd]}>
  <Fragment slot="head">
    <meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1" />
    <link rel="canonical" href={canonical} />
  </Fragment>

  <nav class="flex flex-wrap items-center gap-2 my-3">
    <a href="/" class="chip focus-ring">← Home</a>
    <a href="/decade/" class="chip focus-ring">All Decades</a>
    <a href="/az/" class="chip focus-ring">Browse A–Z</a>
  </nav>

  <h1 class="text-2xl md:text-3xl font-bold mb-2">{title}</h1>
  <p class="text-slate-700 dark:text-slate-300 mb-3">
    Brands here are grouped by their most relevant year in the {requested} (we prefer the year a brand ended; if unknown, we use the start year).
  </p>

  <p class="text-sm text-slate-500 dark:text-slate-400 mb-3">
    {items.length} brand{items.length === 1 ? "" : "s"} in this decade
  </p>

  {items.length ? (
    <ul class="m-0 p-0 list-none border-t border-slate-200 dark:border-slate-800">
      {items.map((b) => {
        const start = b?.active?.start ?? "";
        const end = b?.active?.end ?? "";
        const fate = b?.fate ?? "";
        return (
          <li class="relative group py-3 border-b border-slate-200 dark:border-slate-800 hover:bg-slate-50 dark:hover:bg-slate-800/60 transition-colors">
            <a
              href={`/brand/${encodeURIComponent(b.slug)}/`}
              class="stretched-link focus-ring rounded-md"
              aria-label={`${b.brand}${start ? ` (${start}–${end || "?"})` : ""}${fate ? ` • ${fate}` : ""}`}
            ></a>
            <div class="min-w-0 pr-2">
              <span class="font-semibold text-slate-900 dark:text-slate-100 underline-offset-2 group-hover:underline">
                {b.brand}
              </span>
              <span class="ml-1 text-sm text-slate-600 dark:text-slate-400">
                {start ? ` (${start}\u2013${end || "?"})` : ""}{fate ? ` • ${fate}` : ""}
              </span>
              {b.category && (
                <span
                  class="ml-2 text-xs px-2 py-0.5 rounded-full bg-slate-100 dark:bg-slate-800 text-slate-600 dark:text-slate-300 align-middle"
                  aria-label={`Category: ${b.category}`}
                  title={`Category: ${b.category}`}
                >
                  {b.category}
                </span>
              )}
            </div>
          </li>
        );
      })}
    </ul>
  ) : (
    <p class="text-slate-600 dark:text-slate-300">No brands matched this decade.</p>
  )}

  <div class="mt-6 flex flex-wrap gap-2">
    <a href="/az/" class="chip focus-ring">Browse A–Z</a>
    <a href="/category/" class="chip focus-ring">Categories</a>
    <a href="/decade/" class="chip focus-ring">Decades</a>
  </div>
</Base>
