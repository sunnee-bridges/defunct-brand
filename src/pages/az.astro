---
import Base from "../layouts/Base.astro";

/* Load brand data */
const modules = import.meta.glob("/content/brands/*.json", { eager: true });
const brands: any[] = Object.values(modules).map((m: any) => m.default ?? m);

/* Helpers */
const firstLetter = (s: string = "") => {
  const ch = (s[0] || "").toUpperCase();
  return /[A-Z]/.test(ch) ? ch : "#";
};

/* Sort brands A–Z and group by first letter */
const sorted = brands
  .slice()
  .sort((a, b) => (a.brand || "").localeCompare(b.brand || ""));

const groups: Record<string, any[]> = {};
for (const b of sorted) {
  const key = firstLetter(b.brand);
  (groups[key] ||= []).push(b);
}

/* Only show letters that exist */
const letters = Object.keys(groups)
  .filter((k) => groups[k]?.length)
  .sort((a, b) => (a === "#" ? 1 : b === "#" ? -1 : a.localeCompare(b)));

const total = sorted.length;
const currentPath = Astro.url.pathname;
---

<Base title="Browse A–Z • Defunct Brands" description="Browse all defunct brands alphabetically.">

  <!-- Breadcrumb-ish chips -->
  <nav class="mb-3 flex flex-wrap gap-2" aria-label="Breadcrumb">
    <a href="/" class="chip focus-ring">← Home</a>
    <span class="chip opacity-70 cursor-default" aria-current="page">A–Z</span>
  </nav>

  <h1 class="text-2xl md:text-3xl font-bold mb-1">Browse A–Z</h1>
  <p class="text-sm text-slate-600 dark:text-slate-300 mb-2">Total brands: {total}</p>

  <!-- Jump bar (only existing letters) -->
  <div class="flex flex-wrap gap-1 mb-3" role="navigation" aria-label="Jump to letter">
    {letters.map((L) => (
      <a href={`#${L}`} class="chip focus-ring">{L}</a>
    ))}
  </div>

  <!-- Sections per letter (only letters with items) -->
  <div class="space-y-6">
    {letters.map((L) => (
      <section id={L} aria-labelledby={`h-${L}`}>
        <div class="flex items-baseline gap-2 mb-2">
          <h2 id={`h-${L}`} class="text-lg font-semibold">{L}</h2>
          <span class="text-xs text-slate-500 dark:text-slate-400">{groups[L].length}</span>
        </div>

        <ul class="grid grid-cols-[repeat(auto-fill,minmax(260px,1fr))] gap-4">
          {groups[L].map((b) => (
            <li>
              <article
                class="relative group rounded-xl p-4 border transition
                       bg-white border-gray-200 hover:bg-slate-50
                       dark:bg-slate-900 dark:border-slate-700 dark:hover:bg-slate-800
                       focus-within:ring-2 ring-indigo-500"
              >
                <h3 class="text-lg font-semibold leading-snug line-clamp-2 mb-1 text-slate-900 dark:text-slate-100">
                  <a href={`/brand/${b.slug}/`} class="hover:underline focus-ring stretched-link">
                    {b.brand}
                  </a>
                </h3>

                <div class="text-sm text-gray-600 dark:text-slate-300">
                  {b.active?.start ?? ""}{b.active?.start ? '\u2013' : ''}{b.active?.start ? (b.active?.end ?? '?') : ''}{b.fate ? ` \u2014 ${b.fate}` : ""}
                </div>

                <div class="text-xs text-gray-500 dark:text-slate-400 mt-1">
                  {b.category}
                </div>
              </article>
            </li>
          ))}
        </ul>
      </section>
    ))}
  </div>

  <!-- Optional: add a back-to-top helper after long lists -->
  <div class="mt-6">
    <a href="#top" class="chip focus-ring">↑ Back to top</a>
  </div>
</Base>
