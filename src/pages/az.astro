---
import Base from "../layouts/Base.astro";
import { slugify } from "../lib/slug.js";

/* Load curated data (ONLY *.public.json) and de-dupe by slug */
const modules = import.meta.glob("/src/content/brands/*.public.json", {
  eager: true,
  import: "default",
}) as Record<string, any>;

const bySlug = new Map<string, any>();
for (const raw of Object.values(modules)) {
  const b = raw as any;
  if (!b) continue;
  const key = (String(b.slug || "").trim().toLowerCase()) || slugify(String(b.brand || ""));
  if (!key) continue;
  if (!bySlug.has(key)) bySlug.set(key, b); // first-wins
}
const brands: any[] = Array.from(bySlug.values());

/* Helpers */
const firstLetter = (s: string = "") => {
  const ch = (s[0] || "").toUpperCase();
  return /[A-Z]/.test(ch) ? ch : "#";
};
/* Safe anchor ids (avoid # and odd chars) */
const anchorIdFor = (L: string) => (L === "#" ? "0-9" : L).replace(/[^A-Za-z0-9_-]/g, "-");

/* Sort/group */
const sorted = brands.slice().sort((a, b) => (a.brand || "").localeCompare(b.brand || ""));
const groups: Record<string, any[]> = {};
for (const b of sorted) {
  const key = firstLetter(b.brand);
  (groups[key] ||= []).push(b);
}
const letters = Object.keys(groups)
  .filter((k) => groups[k]?.length)
  .sort((a, b) => (a === "#" ? 1 : b === "#" ? -1 : a.localeCompare(b)));
const total = sorted.length;

/* SEO */
const PAGE_TITLE = "Browse A–Z • Defunct Brands";
const PAGE_DESC = "Browse all discontinued and defunct brands alphabetically. Clean, structured entries with timelines and outcomes.";
const CANONICAL = Astro.site ? new URL("/az/", Astro.site).href : "/az/";
const LD_MAX = 100;
const ldItems = sorted.slice(0, LD_MAX).map((b: any, i: number) => ({
  "@type": "ListItem",
  position: i + 1,
  name: b.brand,
  url: Astro.site
    ? new URL(`/brand/${encodeURIComponent(b.slug)}/`, Astro.site).href
    : `/brand/${encodeURIComponent(b.slug)}/`,
}));
---

<Base title={PAGE_TITLE} description={PAGE_DESC}>
  <Fragment slot="head">
    <link rel="canonical" href={CANONICAL} />
    <meta name="description" content={PAGE_DESC} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={CANONICAL} />
    <meta property="og:title" content={PAGE_TITLE} />
    <meta property="og:description" content={PAGE_DESC} />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={PAGE_TITLE} />
    <meta name="twitter:description" content={PAGE_DESC} />
    <script type="application/ld+json">
      {JSON.stringify({
        "@context": "https://schema.org",
        "@type": "ItemList",
        name: "Defunct Brands A–Z",
        itemListOrder: "http://schema.org/ItemListOrderAscending",
        numberOfItems: total,
        itemListElement: ldItems,
      })}
    </script>
  </Fragment>

  <nav class="mb-3 flex flex-wrap gap-2" aria-label="Breadcrumb">
    <a href="/" class="chip focus-ring">← Home</a>
    <span class="chip opacity-70 cursor-default" aria-current="page">A–Z</span>
  </nav>

  <h1 id="top" class="text-2xl md:text-3xl font-bold mb-1">Browse A–Z</h1>
  <p class="text-sm text-slate-600 dark:text-slate-300 mb-2">Total brands: {total}</p>

  <!-- Jump bar -->
  <div class="flex flex-wrap gap-1 mb-3" role="navigation" aria-label="Jump to letter">
    {letters.map((L) => {
      const anchor = anchorIdFor(L);
      return <a href={`#${anchor}`} class="chip focus-ring">{L}</a>;
    })}
  </div>

  <!-- Letter groups: use <div role="region"> instead of <section> -->
  <div class="space-y-6">
    {letters.map((L) => {
      const anchor = anchorIdFor(L);
      return (
        <div id={anchor} role="region" aria-labelledby={`h-${anchor}`}>
          <div class="flex items-baseline gap-2 mb-2">
            <h2 id={`h-${anchor}`} class="text-lg font-semibold">{L}</h2>
            <span class="text-xs text-slate-500 dark:text-slate-400">{groups[L].length}</span>
          </div>

          <ul class="grid grid-cols-[repeat(auto-fill,minmax(260px,1fr))] gap-4">
            {groups[L].map((b: any) => (
              <li>
                <article
                  class="relative group rounded-xl p-4 border bg-white border-gray-200
                         hover:bg-slate-50 transition
                         dark:bg-slate-900 dark:border-slate-700 dark:hover:bg-slate-800
                         focus-within:ring-2 focus-within:ring-indigo-500
                         focus-within:ring-offset-2 focus-within:ring-offset-white
                         dark:focus-within:ring-offset-slate-900"
                >
                  <!-- Full-card click -->
                  <a
                    href={`/brand/${encodeURIComponent(b.slug)}/`}
                    class="stretched-link focus-ring rounded"
                    aria-label={`${b.brand}${b.active?.start ? ` (${b.active.start}–${b.active?.end ?? "?"})` : ""}${b.fate ? ` — ${b.fate}` : ""}`}
                  ></a>

                  <h3 class="text-lg font-semibold leading-snug line-clamp-2 mb-1 text-slate-900 dark:text-slate-100 group-hover:underline underline-offset-2">
                    {b.brand}
                  </h3>

                  <div class="text-sm text-gray-600 dark:text-slate-300">
                    {b.active?.start ?? ""}{b.active?.start ? '\u2013' : ''}{b.active?.start ? (b.active?.end ?? '?') : ''}{b.fate ? ` \u2014 ${b.fate}` : ""}
                  </div>

                  <div class="text-xs text-gray-500 dark:text-slate-400 mt-1">
                    {b.category}
                  </div>
                </article>
              </li>
            ))}
          </ul>
        </div>
      );
    })}
  </div>

  <div class="mt-6">
    <a href="#top" class="chip focus-ring">↑ Back to top</a>
  </div>
</Base>
