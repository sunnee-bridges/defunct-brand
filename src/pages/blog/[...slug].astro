---
// src/pages/blog/[...slug].astro
import Base from "../../layouts/Base.astro";
import TableOfContents from "@components/TableOfContents.astro";
import { getCollection, getEntryBySlug } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("post", (p) => !p.data.draft);
  return posts.map((p) => ({ params: { slug: p.slug }, props: { entry: p } }));
}

// Resolve entry from props or slug (fallback)
const passed = Astro.props.entry;
const resolved = passed ?? (await getEntryBySlug("post", String(Astro.params.slug)));
if (!resolved) {
  throw new Error(`Post not found: ${Astro.params.slug}`);
}
const entry = resolved; // normalize name for rest of file
const { Content } = await entry.render();

const canonical = Astro.site
  ? new URL(`/blog/${entry.slug}/`, Astro.site).href
  : `/blog/${entry.slug}/`;

// MDX will set `hero: true` in frontmatter when it renders <ArticleHero />
const heroProvided = Boolean(entry.data.hero);

// JSON-LD Article
const articleLd = {
  "@context": "https://schema.org",
  "@type": "Article",
  headline: entry.data.title,
  description: entry.data.description,
  author: { "@type": "Organization", name: entry.data.author || "Vanished Brands" },
  datePublished: entry.data.date ?? entry.data.publishDate,
  dateModified: entry.data.updated ?? entry.data.date ?? entry.data.publishDate,
  mainEntityOfPage: canonical,
};
---
<Base title={entry.data.title} description={entry.data.description} canonical={canonical} jsonLd={[articleLd]}>
  <nav class="mb-4">
    <a href="/" class="chip focus-ring">← Home</a>
    <a href="/blog/" class="chip focus-ring">Blog</a>
  </nav>

  {/* Only show the built-in header if the MDX did NOT render its own <ArticleHero /> */}
  {!heroProvided && (
    <>
      <h1 class="text-2xl md:text-3xl font-bold mb-2">{entry.data.title}</h1>
      <p class="text-slate-600 dark:text-slate-300 mb-6">{entry.data.description}</p>
    </>
  )}

  {/* Two-column layout: content + TOC */}
  <section class="grid grid-cols-1 lg:grid-cols-[minmax(0,1fr)_300px] gap-8 items-start">
    <article class="prose dark:prose-invert max-w-none relative z-0">
      <Content />
    </article>

    <aside class="relative z-10 hidden lg:block">
      <TableOfContents />
    </aside>
  </section>

  <div class="mt-6 flex flex-wrap gap-2">
    <a href="/az/" class="chip focus-ring">Browse A–Z</a>
    <a href="/topics/" class="chip focus-ring">All Topics</a>
    <a href="/category/" class="chip focus-ring">Categories</a>
  </div>
</Base>
