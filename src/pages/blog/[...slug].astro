---
// src/pages/blog/[...slug].astro
import Base from "../../layouts/Base.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("post");
  return posts.map(p => ({ params: { slug: p.slug } , props: { entry: p }}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const canonical = Astro.site ? new URL(`/blog/${entry.slug}/`, Astro.site).href : `/blog/${entry.slug}/`;

const articleLd = {
  "@context": "https://schema.org",
  "@type": "Article",
  headline: entry.data.title,
  description: entry.data.description,
  author: { "@type": "Organization", name: "Vanished Brands" },
  datePublished: entry.data.date,
  dateModified: entry.data.updated ?? entry.data.date,
  mainEntityOfPage: canonical,
};
---
<Base title={entry.data.title} description={entry.data.description} canonical={canonical} jsonLd={[articleLd]}>
  <nav class="mb-4">
    <a href="/" class="chip focus-ring">← Home</a>
    <a href="/blog/" class="chip focus-ring">Blog</a>
  </nav>

  <h1 class="text-2xl md:text-3xl font-bold mb-2">{entry.data.title}</h1>
  <p class="text-slate-600 dark:text-slate-300 mb-6">{entry.data.description}</p>

  <article class="prose dark:prose-invert max-w-none">
    <Content />
  </article>

  <!-- gentle internal links -->
  <div class="mt-6 flex flex-wrap gap-2">
    <a href="/az/" class="chip focus-ring">Browse A–Z</a>
    <a href="/topics/" class="chip focus-ring">All Topics</a>
    <a href="/category/" class="chip focus-ring">Categories</a>
  </div>
</Base>
