---
// src/components/BrandCard.astro
export interface Props {
  slug: string;             // brand slug (e.g., "toys-r-us")
  compact?: boolean;        // optional tighter layout for lists
}

const { slug, compact = false } = Astro.props;

/** Load curated brand JSON at build time */
const modules = import.meta.glob("/src/content/brands/*.json", {
  eager: true,
  import: "default",
}) as Record<string, any>;

/** Find the brand by slug (filename slug OR b.slug) */
let brand: any = null;
for (const [p, mod] of Object.entries(modules)) {
  const data = (mod as any) ?? {};
  const fileSlug = (p.split("/").pop() || "")
    .replace(/\.public\.json$/i, "")
    .replace(/\.json$/i, "");
  if ((data.slug || fileSlug) === slug) {
    brand = { ...data, slug: data.slug || fileSlug };
    break;
  }
}

/* Helpers */
const toYear = (v: unknown): number | undefined => {
  if (v == null) return undefined;
  const m = String(v).match(/\d{3,4}/);
  if (!m) return undefined;
  const n = parseInt(m[0], 10);
  return Number.isFinite(n) ? n : undefined;
};

const startY = toYear(brand?.active?.start);
const endY   = toYear(brand?.active?.end);
const hasYear = !!(startY || endY);

const oneLiner = (brand?.summary || "").trim();

const cardPad = compact ? "p-3" : "p-4";
const titleCls = compact ? "text-base" : "text-lg";
---
{brand ? (
  <article class={`rounded-xl border border-slate-200 dark:border-slate-800 ${cardPad}`}>
    {/* Title */}
    <h3 class={`${titleCls} font-semibold leading-snug mb-1`}>
      <a
        href={`/brand/${encodeURIComponent(brand.slug)}/`}
        class="focus-ring hover:underline"
        title={`What happened to ${brand.brand}?`}
      >
        {brand.brand}
      </a>
    </h3>

    {/* Badge row */}
    <div class="mt-1 flex flex-wrap items-center gap-2 text-[12px]">
      {/* Defunct year chip — only if we have endY */}
      {typeof endY === "number" && (
        <span
          class="inline-flex items-center rounded-full border border-slate-200 bg-white px-2 py-0.5 font-medium text-slate-700
                 dark:border-slate-700 dark:bg-slate-900 dark:text-slate-200"
          aria-label={`Year defunct: ${endY}`}
          title={`Year defunct: ${endY}`}
        >
          ⛔ {endY}
        </span>
      )}

      {/* Category chip */}
      {brand.category && (
        <span
          class="inline-flex items-center rounded-full bg-slate-100 px-2 py-0.5 font-medium text-slate-700
                 dark:bg-slate-800 dark:text-slate-300"
          aria-label={`Industry: ${brand.category}`}
          title={`Industry: ${brand.category}`}
        >
          🏷️ {brand.category}
        </span>
      )}

      {/* Popularity chip (filled client-side if desired) */}
      <span
        class="inline-flex items-center rounded-full bg-amber-50 px-2 py-0.5 font-medium text-amber-700
               dark:bg-amber-900/30 dark:text-amber-300"
        data-views
        hidden
        title="Relative popularity"
      >
        ★ <span class="ml-1" data-views-count>0</span>
      </span>
    </div>

    {/* One-liner */}
    {oneLiner && (
      <p class="mt-2 text-sm text-gray-600 dark:text-slate-300 line-clamp-2">
        {oneLiner}
      </p>
    )}

    {/* Tiny timeline line — ONLY if we have at least one year */}
    {hasYear && (
      <div class="mt-2 text-xs text-gray-500 dark:text-slate-400">
        {startY ? startY : ""}{startY ? "\u2013" : ""}{endY ?? "?"}{brand.fate ? ` \u2014 ${brand.fate}` : ""}
      </div>
    )}
  </article>
) : (
  <article class="rounded-xl border border-slate-200 dark:border-slate-800 p-4">
    <p class="text-sm text-slate-600 dark:text-slate-400">Brand “{slug}” not found.</p>
  </article>
)}
