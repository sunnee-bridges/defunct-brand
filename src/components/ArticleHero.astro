---
// src/components/ArticleHero.astro
export interface Props {
  title: string;
  dek?: string;                    // short subtitle / summary
  author?: string;
  date?: string | Date;
  updated?: string | Date;
  image?: { src: string; alt?: string };
  tags?: string[];
  readingTime?: string;            // optional "6 min read"
}

const {
  title,
  dek,
  author = "Vanished Brands",
  date,
  updated,
  image,
  tags = [],
  readingTime
} = Astro.props;

function fmt(d: string | Date | undefined) {
  if (!d) return null;
  try {
    const dt = typeof d === "string" ? new Date(d) : d;
    return dt.toLocaleDateString("en-US", { year: "numeric", month: "short", day: "2-digit" });
  } catch { return String(d); }
}

const pub = fmt(date);
const upd = fmt(updated);
---

<header class="mb-6">
  <h1 class="text-3xl md:text-4xl font-extrabold tracking-tight mb-2">
    {title}
  </h1>

  {dek && (
    <p class="text-lg text-slate-700 dark:text-slate-300 max-w-prose">
      {dek}
    </p>
  )}

  <div class="mt-3 flex flex-wrap items-center gap-2 text-sm text-slate-600 dark:text-slate-400">
    <span>{author}</span>
    {pub && <span aria-hidden="true">·</span>}
    {pub && <time datetime={typeof date === 'string' ? date : undefined}>Published {pub}</time>}
    {upd && <span aria-hidden="true">·</span>}
    {upd && <time datetime={typeof updated === 'string' ? updated : undefined}>Updated {upd}</time>}
    {readingTime && <><span aria-hidden="true">·</span><span>{readingTime}</span></>}
  </div>

  {Array.isArray(tags) && tags.length > 0 && (
    <div class="mt-3 flex flex-wrap gap-2">
      {tags.map((t) => (
        <span class="inline-flex items-center rounded-full border border-slate-200 dark:border-slate-700 px-2 py-0.5 text-xs text-slate-700 dark:text-slate-300 bg-white dark:bg-slate-900">
          {t}
        </span>
      ))}
    </div>
  )}

  {image?.src && (
    <div class="mt-5 overflow-hidden rounded-2xl border border-slate-200 dark:border-slate-800">
      <img
        src={image.src}
        alt={image.alt ?? ""}
        class="block w-full h-auto"
        loading="eager"
        decoding="async"
      />
    </div>
  )}
</header>
